<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <variable name="ColorHighlight">
        <value condition="!String.IsEmpty(Skin.String(focuscolor.name))">$INFO[Skin.String(focuscolor.name)]</value>
        <value>Highlight</value>
    </variable>

    <variable name="DefWidgetContent">
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(widgetPath)) + Skin.HasSetting(NoPersistentWidgets)">$INFO[Container(300).ListItem.Property(widgetPath)]</value>
        <value condition="String.Contains(Container(300).ListItem.Property(widget),Weather,left) + !String.IsEmpty(Skin.String(weather.fanart))">noop</value>
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(Background))">noop</value>
        <value condition="!String.IsEmpty(Skin.String(home.slideshowpath)) + String.IsEmpty(Container(300).ListItem.Property(widget))">noop</value>
        <value condition="!String.IsEmpty(Skin.String(home.fallbackwidget))">$INFO[Skin.String(home.fallbackwidget)]</value>
        <value>plugin://service.library.data.provider?type=randommovies&amp;reload=$INFO[Window.Property(randommovies)]</value>
    </variable>

    <variable name="DefWidgetTarget">
        <value condition="!String.IsEmpty(Container(300).ListItem.Property(widgetTarget))">$INFO[Container(300).ListItem.Property(widgetTarget)]</value>
        <value>videos</value>
    </variable>

    <variable name="DefWidgetLimit">
        <value condition="String.IsEqual(Skin.String(WidgetLimit),$LOCALIZE[37030])"></value>
        <value condition="String.IsEqual(Skin.String(WidgetLimit),50)">50</value>
        <value condition="String.IsEqual(Skin.String(WidgetLimit),25)">25</value>
        <value>10</value>
    </variable>

    <include name="DefNextAiredWidget">
        <item id="1">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.1.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.1.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.1.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.1.AirTime)]$INFO[Window.Property(NextAired.1.Network), - ,]$INFO[Window.Property(NextAired.1.Status), - ,]$INFO[Window.Property(NextAired.1.Classification),[CR],]$INFO[Window.Property(NextAired.1.Genre), - ,]$INFO[Window.Property(NextAired.1.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.1.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.1.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.1.NextNumber)]$INFO[Window.Property(NextAired.1.NextTitle), ,]$INFO[Window.Property(NextAired.1.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.1.Label))</visible>
        </item>
        <item id="2">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.2.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.2.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.2.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.2.AirTime),, - ]$INFO[Window.Property(NextAired.2.Network)]$INFO[Window.Property(NextAired.2.Status), - ,]$INFO[Window.Property(NextAired.2.Classification),[CR],]$INFO[Window.Property(NextAired.2.Genre), - ,]$INFO[Window.Property(NextAired.2.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.2.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.2.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.2.NextNumber)]$INFO[Window.Property(NextAired.2.NextTitle), ,]$INFO[Window.Property(NextAired.2.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.2.Label))</visible>
        </item>
        <item id="3">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.3.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.3.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.3.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.3.AirTime),, - ]$INFO[Window.Property(NextAired.3.Network)]$INFO[Window.Property(NextAired.3.Status), - ,]$INFO[Window.Property(NextAired.3.Classification),[CR],]$INFO[Window.Property(NextAired.3.Genre), - ,]$INFO[Window.Property(NextAired.3.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.3.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.3.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.3.NextNumber)]$INFO[Window.Property(NextAired.3.NextTitle), ,]$INFO[Window.Property(NextAired.3.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.3.Label))</visible>
        </item>
        <item id="4">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.4.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.4.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.4.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.4.AirTime),, - ]$INFO[Window.Property(NextAired.4.Network)]$INFO[Window.Property(NextAired.4.Status), - ,]$INFO[Window.Property(NextAired.4.Classification),[CR],]$INFO[Window.Property(NextAired.4.Genre), - ,]$INFO[Window.Property(NextAired.4.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.4.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.4.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.4.NextNumber)]$INFO[Window.Property(NextAired.4.NextTitle), ,]$INFO[Window.Property(NextAired.4.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.4.Label))</visible>
        </item>
        <item id="5">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.5.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.5.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.5.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.5.AirTime),, - ]$INFO[Window.Property(NextAired.5.Network)]$INFO[Window.Property(NextAired.5.Status), - ,]$INFO[Window.Property(NextAired.5.Classification),[CR],]$INFO[Window.Property(NextAired.5.Genre), - ,]$INFO[Window.Property(NextAired.5.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.5.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.5.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.5.NextNumber)]$INFO[Window.Property(NextAired.5.NextTitle), ,]$INFO[Window.Property(NextAired.5.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.5.Label))</visible>
        </item>
        <item id="6">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.6.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.6.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.6.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.6.AirTime),, - ]$INFO[Window.Property(NextAired.6.Network)]$INFO[Window.Property(NextAired.6.Status), - ,]$INFO[Window.Property(NextAired.6.Classification),[CR],]$INFO[Window.Property(NextAired.6.Genre), - ,]$INFO[Window.Property(NextAired.6.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.6.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.6.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.6.NextNumber)]$INFO[Window.Property(NextAired.6.NextTitle), ,]$INFO[Window.Property(NextAired.6.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.6.Label))</visible>
        </item>
        <item id="7">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.7.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.7.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.7.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.7.AirTime),, - ]$INFO[Window.Property(NextAired.7.Network)]$INFO[Window.Property(NextAired.7.Status), - ,]$INFO[Window.Property(NextAired.7.Classification),[CR],]$INFO[Window.Property(NextAired.7.Genre), - ,]$INFO[Window.Property(NextAired.7.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.7.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.7.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.7.NextNumber)]$INFO[Window.Property(NextAired.7.NextTitle), ,]$INFO[Window.Property(NextAired.7.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.7.Label))</visible>
        </item>
        <item id="8">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.8.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.8.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.8.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.8.AirTime),, - ]$INFO[Window.Property(NextAired.8.Network)]$INFO[Window.Property(NextAired.8.Status), - ,]$INFO[Window.Property(NextAired.8.Classification),[CR],]$INFO[Window.Property(NextAired.8.Genre), - ,]$INFO[Window.Property(NextAired.8.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.8.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.8.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.8.NextNumber)]$INFO[Window.Property(NextAired.8.NextTitle), ,]$INFO[Window.Property(NextAired.8.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.8.Label))</visible>
        </item>
        <item id="9">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.9.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.9.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.9.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.9.AirTime),, - ]$INFO[Window.Property(NextAired.9.Network)]$INFO[Window.Property(NextAired.9.Status), - ,]$INFO[Window.Property(NextAired.9.Classification),[CR],]$INFO[Window.Property(NextAired.9.Genre), - ,]$INFO[Window.Property(NextAired.9.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.9.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.9.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.9.NextNumber)]$INFO[Window.Property(NextAired.9.NextTitle), ,]$INFO[Window.Property(NextAired.9.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.9.Label))</visible>
        </item>
        <item id="10">
            <onclick>ActivateWindow(Videos,$INFO[Window.Property(NextAired.10.Library)],return)</onclick>
            <property name="Fanart">$INFO[Window.Property(NextAired.10.Art(fanart))]</property>
            <icon>$INFO[Window.Property(NextAired.10.Art(poster))]</icon>
            <property name="Plot">$INFO[Window.Property(NextAired.10.AirTime),, - ]$INFO[Window.Property(NextAired.10.Network)]$INFO[Window.Property(NextAired.10.Status), - ,]$INFO[Window.Property(NextAired.10.Classification),[CR],]$INFO[Window.Property(NextAired.10.Genre), - ,]$INFO[Window.Property(NextAired.10.Runtime),[CR], $LOCALIZE[12391]]</property>
            <property name="Logo">$INFO[Window.Property(NextAired.10.Art(clearlogo))]</property>
            <label>$INFO[Window.Property(NextAired.10.Label)]</label>
            <label2>$INFO[Window.Property(NextAired.10.NextNumber)]$INFO[Window.Property(NextAired.10.NextTitle), ,]$INFO[Window.Property(NextAired.10.NextDate), • ,]</label2>
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),NextAired) + !String.IsEmpty(Window.Property(NextAired.10.Label))</visible>
        </item>
    </include>
    <include name="DefFavouritesWidget">
        <item id="11" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.1.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.1.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.1.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.1.path)]</onclick>
        </item>
        <item id="12" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.2.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.2.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.2.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.2.path)]</onclick>
        </item>
        <item id="13" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.3.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.3.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.3.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.3.path)]</onclick>
        </item>
        <item id="14" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.4.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.4.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.4.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.4.path)]</onclick>
        </item>
        <item id="15" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.5.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.5.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.5.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.5.path)]</onclick>
        </item>
        <item id="16" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.6.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.6.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.6.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.6.path)]</onclick>
        </item>
        <item id="17" description="AutoFavourite">
            <visible>String.IsEqual(Container(300).ListItem.Property(widget),Favourites) + !String.IsEmpty(Window(Home).Property(favourite.7.path))</visible>
            <label>$INFO[Window(Home).Property(favourite.7.name)]</label>
            <icon>$INFO[Window(Home).Property(favourite.7.thumb)]</icon>
            <property name="ItemType">$LOCALIZE[1036]</property>
            <onclick>$INFO[Window(Home).Property(favourite.7.path)]</onclick>
        </item>
    </include>


    <include name="DefWidgetSelector">
        <align>center</align>
        <aligny>center</aligny>
        <width>293</width>
        <onclick>SetFocus(301)</onclick>
        <top>0</top>
        <height>64</height>
        <centerleft>50%</centerleft>
        <textcolor>Dark3</textcolor>
        <focusedcolor>Dark1</focusedcolor>
        <font>WidgetSelector</font>
        <texturefocus>noop</texturefocus>
    </include>

    <include name="DefDialogButtons">
        <width>300</width>
        <font>Button</font>
        <textcolor>Black70</textcolor>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
    </include>

    <include name="DefInfoButtons">
        <font>Button</font>
        <textcolor>Dark2</textcolor>
        <width>313</width>
        <height>68</height>
        <onfocus>ClearProperty(content)</onfocus>
        <texturenofocus colordiffuse="Dark4" border="5">common/box.png</texturenofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
        <alttexturenofocus colordiffuse="Dark4" border="5">common/box.png</alttexturenofocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</alttexturefocus>
    </include>

    <include name="DefDialogInfoPanel">
        <include>Animation.FadeIn.Slide</include>
        <include>Animation.FadeOut</include>
        <centerleft>50%</centerleft>
        <posy>120</posy>
        <width>1320</width>
        <height>840</height>
        <control type="image">
            <left>-24</left>
            <right>-24</right>
            <top>-24</top>
            <bottom>-24</bottom>
            <bordertexture border="32">common/shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture colordiffuse="White100" border="16">common/box.png</texture>
        </control>
    </include>

    <include name="DefDialogInfoHeader">
        <left>30</left>
        <right>320</right>
        <posy>18</posy>
        <font>MediumBold</font>
        <align>left</align>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
    </include>

    <include name="DefDialogHeader">
        <description>header label</description>
        <centerleft>50%</centerleft>
        <posy>15</posy>
        <width>990</width>
        <align>center</align>
        <font>MediumBold</font>
        <textcolor>Black70</textcolor>
    </include>

    <include name="DefDialogBackground">
        <include>Animation.ZoomIn</include>
        <centerleft>50%</centerleft>
        <centertop>50%</centertop>
        <height>900</height>
        <width>1080</width>
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
    </include>

    <include name="DefDialogOK">
        <centerleft>50%</centerleft>
        <posy>360</posy>
        <width>900</width>
        <include>Animation.FadeIn.Slide</include>
        <control type="image">
            <posx>-30</posx>
            <posy>-30</posy>
            <width>960</width>
            <height>444</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>

        <control type="image">
            <left>-46</left>
            <right>-46</right>
            <top>-46</top>
            <height>476</height>
            <bordertexture border="32">common/shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture colordiffuse="White100" border="16">common/box.png</texture>
        </control>

        <control type="label" id="1">
            <description>Heading</description>
            <left>15</left>
            <right>15</right>
            <font>MediumBold</font>
            <align>left</align>
        </control>

        <control type="textbox" id="9">
            <description>Line 1</description>
            <left>15</left>
            <right>15</right>
            <posy>108</posy>
            <height>300</height>
        </control>


    </include>

    <include name="DefPVRDialogButton">
        <width>600</width>
        <height>66</height>
        <align>left</align>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
        <radioposx>540</radioposx>
        <textcolor>Black70</textcolor>
    </include>

    <include name="DefKeyboardKeys">
        <width>85</width>
        <height>75</height>
        <texturenofocus border="5" colordiffuse="Black12">common/box.png</texturenofocus>
        <texturefocus border="5" colordiffuse="$VAR[ColorHighlight]">common/box.png</texturefocus>
        <textoffsetx>0</textoffsetx>
        <textcolor>Black70</textcolor>
        <focusedcolor>Selected</focusedcolor>
        <radioposx>320</radioposx>
        <radioposy>22</radioposy>
    </include>
    <include name="DefSideBrowserButton">
        <radioposx>400</radioposx>
        <width>100%</width>
        <height>64</height>
        <font>Tiny</font>
        <textcolor>Dark2</textcolor>
        <focusedcolor>Light1</focusedcolor>
        <alttexturefocus colordiffuse="Dark1" border="16">common/box.png</alttexturefocus>
        <texturefocus colordiffuse="Dark1" border="16">common/box.png</texturefocus>
    </include>
    <include name="DefContextButton">
        <radioposx>400</radioposx>
        <width>450</width>
        <height>70</height>
        <font>Tiny</font>
        <align>left</align>
        <textcolor>Black70</textcolor>
        <textureradiofocus colordiffuse="Black70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="Black30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</alttexturefocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</texturefocus>
    </include>
    <include name="DefSettingsButton">
        <align>left</align>
        <font>Small</font>
        <textcolor>PanelWhite100</textcolor>
        <disabledcolor>PanelWhite12</disabledcolor>
        <height>70</height>
        <textureup flipy="true" colordiffuse="PanelWhite30">buttons/spin-down.png</textureup>
        <texturedown colordiffuse="PanelWhite30">buttons/spin-down.png</texturedown>
        <textureupfocus flipy="true" colordiffuse="PanelWhite100">buttons/spin-down.png</textureupfocus>
        <texturedownfocus colordiffuse="PanelWhite100">buttons/spin-down.png</texturedownfocus>
        <textureradiofocus colordiffuse="PanelWhite70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="PanelWhite12">buttons/radio-off.png</textureradionofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturefocus>
        <alttexturefocus colordiffuse="$VAR[ColorHighlight]">common/white.png</alttexturefocus>
    </include>
    <include name="DefSettingsOKCancelButton">
        <font>Button</font>
        <texturenofocus colordiffuse="White12" border="16">common/white.png</texturenofocus>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="16">common/white.png</texturefocus>
        <height>66</height>
        <width>270</width>
    </include>
    <include name="Def9000GroupList">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <onleft>50</onleft>
        <onright>50</onright>
        <onback>50</onback>
        <posx>8</posx>
        <posy>16</posy>
        <width>510</width>
        <height>350</height>
        <itemgap>0</itemgap>
    </include>
    <include name="Def9000Arrows">
        <control type="group">
            <control type="image">
                <description>arrow image</description>
                <centerleft>50%</centerleft>
                <posy>-16</posy>
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="White70" flipy="true">common/arrow-small.png</texture>
            </control>
            <control type="image">
                <description>arrow image</description>
                <centerleft>50%</centerleft>
                <posy>382</posy>
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="White70" flipy="false">common/arrow-small.png</texture>
            </control>
        </control>
    </include>
    <include name="Def9000Background">
        <visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
        <include>Animation.ZoomIn</include>
        <include>Animation.FadeOut</include>
        <top>184</top>
        <centerleft>50%</centerleft>
        <height>382</height>
        <width>466</width>

        <control type="image">
            <description>background image</description>
            <posx>0</posx>
            <posy>0</posy>
            <width>466</width>
            <height>100%</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
    </include>


    <include name="Def9000MusicSide">
        <control type="button" id="2">
            <description>View</description>
            <include>DefContextButton</include>
            <align>left</align>
        </control>

        <control type="button" id="3">
            <description>Sort</description>
            <include>DefContextButton</include>
            <align>left</align>
        </control>

        <control type="togglebutton" id="4">
            <description>Ascending</description>
            <include>DefContextButton</include>
            <align>left</align>
            <label>584</label>
            <altlabel>585</altlabel>
        </control>

        <control type="button" id="7">
            <description>Playlist</description>
            <include>DefContextButton</include>
            <align>left</align>
            <label>136</label>
            <onclick>SetFocus(50)</onclick>
            <visible>Window.IsVisible(MyMusicSongs.xml)</visible>
            <visible>!String.IsEqual(Container.FolderPath,special://musicplaylists/)</visible>
        </control>

        <control type="button" id="9098">
            <description>Now Playing</description>
            <include>DefContextButton</include>
            <label>13350</label>
            <align>left</align>
            <onclick>ActivateWindow(MusicPlaylist)</onclick>
            <visible>Integer.IsGreater(Playlist.Length(music),1)</visible>
        </control>


    </include>

    <include name="DefDialogSelectManual6">
        <posx>738</posx>
        <posy>120</posy>
        <width>300</width>
        <height>70</height>
        <align>center</align>
        <label>368</label>
        <onleft>3</onleft>
        <onright>3</onright>
        <onup>3</onup>
        <ondown>3</ondown>
        <font>Button</font>
        <textcolor>Black70</textcolor>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
    </include>
    <include name="DefDialogSelectManual3">
        <description>Manual</description>
        <right>18</right>
        <posy>18</posy>
        <width>100</width>
        <height>70</height>
        <align>center</align>
        <label>368</label>
        <onleft>3</onleft>
        <onright>3</onright>
        <onup>3</onup>
        <ondown>3</ondown>
        <font>Button</font>
        <textcolor>Black70</textcolor>
        <texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
        <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
    </include>

    <include name="DefVideoInfoCastWithDirector">
        <top>171</top>
        <height>639</height>
    </include>
    <include name="DefVideoInfoCastWithoutDirector">
        <top>100</top>
        <height>710</height>
    </include>

    <include name="DefHomeRight520"><right>520</right></include>
    <include name="DefHomeRightSidePad"><right>SidePad</right></include>

    <variable name="DefDirectorInfoWindowContent">
        <value condition="String.IsEqual(Window.Property(content),1)">plugin://script.extendedinfo?info=studio&amp;&amp;studio=$INFO[ListItem.Studio]</value>
        <value condition="String.IsEqual(Window.Property(content),2)">plugin://script.extendedinfo?info=similarmovies&amp;&amp;dbid=$INFO[ListItem.DBID]</value>
        <value>plugin://script.extendedinfo?info=personmovies&amp;&amp;person=$INFO[ListItem.Director]</value>
    </variable>

    <variable name="DefDirectorWindowContent">
        <value condition="String.IsEqual(Window(1103).Property(content),1)">plugin://script.extendedinfo?info=studio&amp;&amp;studio=$INFO[Window(home).Property(ExtStudio)]</value>
        <value condition="String.IsEqual(Window(1103).Property(content),2)">plugin://script.extendedinfo?info=similarmovies&amp;&amp;dbid=$INFO[Window(home).Property(ExtDBID)]</value>
        <value>plugin://script.extendedinfo?info=personmovies&amp;&amp;person=$INFO[Window(home).Property(ExtDirector)]</value>
    </variable>

    <variable name="DefMovieDBMoviesContent">
        <value condition="String.IsEqual(Window(1104).Property(content),1)">plugin://script.extendedinfo?info=topratedmovies</value>
        <value condition="String.IsEqual(Window(1104).Property(content),2)">plugin://script.extendedinfo?info=popularmovies</value>
        <value condition="String.IsEqual(Window(1104).Property(content),3)">plugin://script.extendedinfo?info=upcomingmovies</value>
        <value>plugin://script.extendedinfo?info=incinemamovies</value>
    </variable>

    <variable name="DefMovieDBEpisodesContent">
        <value condition="String.IsEqual(Window(1105).Property(content),1)">plugin://script.extendedinfo?info=topratedtvshows</value>
        <value condition="String.IsEqual(Window(1105).Property(content),2)">plugin://script.extendedinfo?info=populartvshows</value>
        <value condition="String.IsEqual(Window(1105).Property(content),3)">plugin://script.extendedinfo?info=onairtvshows</value>
        <value>plugin://script.extendedinfo?info=airingtodaytvshows</value>
    </variable>


    <include name="DefExtendedInfoList">
        <bottom>80</bottom>
        <left>530</left>
        <width>1320</width>
        <height>670</height>
        <include>Animation.FadeIn.Slide</include>
        <ondown>ClearProperty(content)</ondown>
        <ondown>9000</ondown>
        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
        <scrolltime tween="quadratic">400</scrolltime>
        <itemlayout height="455" width="220">
            <include>DefExtendedInfoItemContent</include>
        </itemlayout>
        <focusedlayout height="455" width="220">
            <include>DefExtendedInfoFocusContent</include>
        </focusedlayout>
    </include>

    <include name="DefExtendedInfoListWide">
        <bottom>80</bottom>
        <left>530</left>
        <width>1320</width>
        <height>670</height>
        <include>Animation.FadeIn.Slide</include>
        <ondown>ClearProperty(content)</ondown>
        <ondown>9000</ondown>
        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
        <scrolltime tween="quadratic">400</scrolltime>
        <itemlayout height="455" width="660">
            <include>DefExtendedInfoItemContent</include>
        </itemlayout>
        <focusedlayout height="455" width="660">
            <include>DefExtendedInfoFocusContent</include>
        </focusedlayout>
    </include>

    <include name="DefExtendedInfoItemContent">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <right>0</right>
            <bottom>130</bottom>
            <texture border="10">common/nofocus-shadow10.png</texture>
        </control>

        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>140</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/wall.png" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
        </control>

        <control type="image">
            <left>10</left>
            <right>10</right>
            <bottom>10</bottom>
            <height>106</height>
            <texture colordiffuse="Dark4" border="5">common/box.png</texture>
        </control>
        <control type="textbox">
            <left>20</left>
            <right>20</right>
            <centerbottom>62</centerbottom>
            <height>92</height>
            <font>Mini</font>
            <autoscroll>false</autoscroll>
            <textcolor>Dark2</textcolor>
            <label>$INFO[ListItem.Label]$VAR[LabelImageList,[CR](,)]</label>
            <aligny>top</aligny>
            <align>center</align>
        </control>
    </include>

    <include name="DefExtendedInfoFocusContent">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <right>0</right>
            <bottom>130</bottom>
            <texture border="10">common/nofocus-shadow10.png</texture>
        </control>
        <control type="image">
            <left>10</left>
            <top>10</top>
            <right>10</right>
            <bottom>140</bottom>
            <aspectratio scalediffuse="false">scale</aspectratio>
            <texture diffuse="diffuse/wall.png" background="true" fallback="DefaultPicture.png">$INFO[ListItem.Icon]</texture>
        </control>
        <control type="image">
            <centerleft>50%</centerleft>
            <centertop>175</centertop>
            <width>128</width>
            <height>128</height>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="88ffffff">common/playring.png</texture>
            <animation type="Focus">
                <effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
                <effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
            </animation>
            <animation type="Unfocus">
                <effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
                <effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
            </animation>
            <visible>!String.Contains(ListItem.Path,script.extendedinfo)</visible>
        </control>
        <control type="group">
            <control type="image">
                <left>10</left>
                <right>10</right>
                <bottom>10</bottom>
                <height>106</height>
                <texture colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texture>
            </control>
            <control type="textbox">
                <left>20</left>
                <right>20</right>
                <centerbottom>62</centerbottom>
                <height>92</height>
                <font>Mini</font>
                <scroll>true</scroll>
                <textcolor>PanelWhite100</textcolor>
                <label>$INFO[ListItem.Label]$VAR[LabelImageList,[CR](,)]</label>
                <aligny>top</aligny>
                <align>center</align>
            </control>
        </control>
    </include>

    <include name="DefHubWindow">
        <include>GlobalBackground</include>
        <include>Furniture_Header</include>
        <include>Furniture_NowPlaying</include>
        <include>Furniture_Clock</include>
        <include>Furniture_Weather</include>
        <include>Furniture_Hub_Flags</include>
        <control type="group">
            <include>Animation.Common</include>
            <control type="group">
                <top>PosterPad</top>
                <left>SidePad</left>
                <right>SidePad</right>
                <height>640</height>
                <control type="group">
                    <control type="image">
                        <left>-8</left>
                        <width>1138</width>
                        <top>-8</top>
                        <bottom>-8</bottom>
                        <texture border="15" colordiffuse="Panel">common/rounded-shadow8.png</texture>
                    </control>
                    <control type="image">
                        <left>0</left>
                        <width>1122</width>
                        <top>0</top>
                        <bottom>0</bottom>
                        <texture background="true" diffuse="diffuse/home-fanart.png">pvr/background.jpg</texture>
                        <visible>!Integer.IsGreater(Container(9500).NumItems,0)</visible>
                    </control>
                    <include>DefHubWidgetInclude</include>
                    
                    <control type="group">
                        <left>0</left>
                        <width>1122</width>
                        <bottom>0</bottom>
                        <height>70</height>
                        <visible>Integer.IsGreater(Container(9500).NumItems,0)</visible>
                        <control type="image">
                            <left>0</left>
                            <right>0</right>
                            <bottom>0</bottom>
                            <height>70</height>
                            <texture border="15" colordiffuse="df000000">common/white.png</texture>
                        </control>
                        <control type="label">
                            <posx>30</posx>
                            <width>200</width>
                            <font>Small</font>
                            <aligny>center</aligny>
                            <height>64</height>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Year]</label>
                        </control>
                        <control type="label">
                            <posx>120</posx>
                            <width>auto</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <font>SmallBold</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Label]</label>
                        </control>
                        <control type="label">
                            <right>154</right>
                            <width>500</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Duration,, $LOCALIZE[31102]]</label>
                        </control>
                        <control type="image">
                            <centerright>110</centerright>
                            <centertop>32</centertop>
                            <width>32</width>
                            <height>32</height>
                            <aspectratio aligny="top">keep</aspectratio>
                            <texture>$VAR[PercentWatched9500]</texture>
                        </control>
                        <control type="label">
                            <right>30</right>
                            <width>500</width>
                            <aligny>center</aligny>
                            <height>64</height>
                            <align>right</align>
                            <font>Small</font>
                            <textcolor>PanelWhite70</textcolor>
                            <selectedcolor>PanelWhite70</selectedcolor>
                            <label>$INFO[Container(9500).ListItem.Rating]</label>
                        </control>
                    </control>
                    <control type="image">
                        <left>-2</left>
                        <width>1126</width>
                        <top>-2</top>
                        <height>644</height>
                        <texture colordiffuse="Dark1" border="20">common/selectbox.png</texture>
                        <visible>Control.HasFocus(9500)</visible>
                    </control>
                </control>

                <control type="group">
                    <control type="list" id="9501">
                        <description>Widget</description>
                        <left>1140</left>
                        <right>0</right>
                        <top>0</top>
                        <height>640</height>
                        <onleft>9500</onleft>
                        <onright>60</onright>
                        <onup>9501</onup>
                        <ondown>9501</ondown>
                        <pagecontrol>60</pagecontrol>
                        <preloaditems>2</preloaditems>
                        <orientation>vertical</orientation>
                        <scrolltime tween="quadratic">400</scrolltime>
                        <include>Animation.FadeIn</include>
                        <include>Animation.FadeOut</include>
                        <itemlayout width="620" height="80">
                            <control type="image">
                                <right>0</right>
                                <top>0</top>
                                <bottom>0</bottom>
                                <width>80</width>
                                <texture colordiffuse="Dark2">$INFO[ListItem.Icon]</texture>
                                <visible>String.Contains(ListItem.Icon,special://skin/extras/icons/)</visible>
                            </control>
                            <control type="label">
                                <left>30</left>
                                <right>80</right>
                                <height>100%</height>
                                <font>SmallBold</font>
                                <textcolor>Dark2</textcolor>
                                <label>$INFO[ListItem.Label]</label>
                            </control>
                        </itemlayout>
                        <focusedlayout width="620" height="80">
                            <control type="group">
                                <visible>Control.HasFocus(9501)</visible>
                                <control type="image">
                                    <width>100%</width>
                                    <height>100%</height>
                                    <texture border="15" colordiffuse="Dark1">common/box.png</texture>
                                </control>
                                <control type="image">
                                    <right>0</right>
                                    <top>0</top>
                                    <bottom>0</bottom>
                                    <width>80</width>
                                    <texture colordiffuse="Light1">$INFO[ListItem.Icon]</texture>
                                    <visible>String.Contains(ListItem.Icon,special://skin/extras/icons/)</visible>
                                </control>
                                <control type="label">
                                    <left>30</left>
                                    <right>80</right>
                                    <height>100%</height>
                                    <font>SmallBold</font>
                                    <textcolor>Light1</textcolor>
                                    <label>$INFO[ListItem.Label]</label>
                                </control>
                            </control>
                            <control type="group">
                                <visible>!Control.HasFocus(9501)</visible>
                                <control type="image">
                                    <right>0</right>
                                    <top>0</top>
                                    <bottom>0</bottom>
                                    <width>80</width>
                                    <texture colordiffuse="Dark1">$INFO[ListItem.Icon]</texture>
                                    <visible>String.Contains(ListItem.Icon,special://skin/extras/icons/)</visible>
                                </control>
                                <control type="label">
                                    <left>30</left>
                                    <right>80</right>
                                    <height>100%</height>
                                    <font>SmallBold</font>
                                    <textcolor>Dark2</textcolor>
                                    <label>$INFO[ListItem.Label]</label>
                                </control>
                            </control>
                        </focusedlayout>
                        <content><include>$PARAM[list]</include></content>
                    </control>
                </control>

            </control>
            <control type="scrollbar" id="60">
                <onback>9501</onback>
                <centerright>60</centerright>
                <posy>PosterPad</posy>
                <height>PosterH</height>
                <width>8</width>
                <onleft>9501</onleft>
                <onright>9501</onright>
                <texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
                <texturesliderbar border="4" colordiffuse="Dark3">scrollbar/scrollv.png</texturesliderbar>
                <texturesliderbarfocus border="4" colordiffuse="Dark2">scrollbar/scrollv.png</texturesliderbarfocus>
                <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
            </control>
        </control>
    </include>

    <!-- HUB WIDGET -->
    <include name="DefHubWidgetContent">
        <param name="target" default="$VAR[DefHubWidgetTarget]" />
        <param name="content" default="$VAR[DefHubWidget]" />
        <definition>
            <control type="wraplist" id="9500">
                <description>Widget</description>
                <left>0</left>
                <width>1122</width>
                <top>0</top>
                <bottom>0</bottom>
                <onright>9501</onright>
                <onup>9500</onup>
                <ondown>9500</ondown>
                <preloaditems>1</preloaditems>
                <orientation>vertical</orientation>
                <autoscroll time="10000">!Control.HasFocus(9500)</autoscroll>
                <scrolltime tween="quadratic">400</scrolltime>
                <include>Animation.FadeIn</include>
                <include>Animation.FadeOut</include>
                <visible>$PARAM[visible]</visible>
                <itemlayout width="1122" height="640">
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <texture background="true" diffuse="diffuse/home-fanart.png">$VAR[FanartImage]</texture>
                    </control>
                </itemlayout>
                <focusedlayout width="1122" height="640">
                    <control type="image">
                        <width>100%</width>
                        <height>100%</height>
                        <texture background="true" diffuse="diffuse/home-fanart.png">$VAR[FanartImage]</texture>
                    </control>
                </focusedlayout>
                <content target="$PARAM[target]">$PARAM[content]</content>
            </control>
        </definition>
    </include>

    <include name="DefHubWidgetInclude">
        <include content="DefHubWidgetContent">
            <param name="visible" value="[String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(0).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(0).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(1).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(1).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(2).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(2).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(3).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(3).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(4).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(4).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(5).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(5).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(6).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(6).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(7).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(7).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(8).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(8).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(9).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(9).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(10).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(10).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(11).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(11).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(12).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(12).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(13).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(13).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(14).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(14).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(15).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(15).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(16).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(16).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(17).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(17).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(18).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(18).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(19).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(19).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(20).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(20).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(21).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(21).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(22).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(22).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(23).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(23).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(24).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(24).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(25).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(25).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(26).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(26).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(27).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(27).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(28).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(28).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(29).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(29).Property(widgetPath))] | [String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(30).Label) + String.String.IsEmpty(Container(9501).ListItemAbsolute(30).Property(widgetPath))]" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(0).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(0).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(0).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(0).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(1).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(1).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(1).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(1).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(2).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(2).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(2).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(2).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(3).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(3).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(3).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(3).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(4).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(4).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(4).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(4).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(5).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(5).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(5).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(5).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(6).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(6).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(6).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(6).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(7).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(7).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(7).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(7).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(8).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(8).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(8).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(8).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(9).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(9).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(9).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(9).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(10).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(10).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(10).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(10).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(11).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(11).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(11).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(11).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(12).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(12).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(12).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(12).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(13).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(13).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(13).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(13).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(14).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(14).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(14).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(14).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(15).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(15).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(15).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(15).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(16).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(16).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(16).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(16).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(17).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(17).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(17).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(17).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(18).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(18).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(18).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(18).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(19).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(19).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(19).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(19).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(20).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(20).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(20).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(20).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(21).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(21).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(21).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(21).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(22).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(22).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(22).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(22).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(23).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(23).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(23).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(23).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(24).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(24).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(24).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(24).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(25).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(25).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(25).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(25).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(26).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(26).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(26).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(26).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(27).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(27).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(27).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(27).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(28).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(28).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(28).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(28).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(29).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(29).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(29).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(29).Property(widgetPath))" />
        </include>
        <include content="DefHubWidgetContent">
            <param name="target" value="$INFO[Container(9501).ListItemAbsolute(30).Property(widgetTarget)]" />
            <param name="content" value="$INFO[Container(9501).ListItemAbsolute(30).Property(widgetPath)]" />
            <param name="visible" value="String.IsEqual(Container(9501).ListItem.Label,Container(9501).ListItemAbsolute(30).Label) + !String.String.IsEmpty(Container(9501).ListItemAbsolute(30).Property(widgetPath))" />
        </include>
    </include>

    <variable name="DefHubWidget">
        <value condition="Window.IsVisible(1111) + !String.IsEmpty(Skin.String(Widget.1111))">$INFO[Skin.String(Widget.1111)]</value>
        <value condition="Window.IsVisible(1112) + !String.IsEmpty(Skin.String(Widget.1112))">$INFO[Skin.String(Widget.1112)]</value>
        <value condition="Window.IsVisible(1113) + !String.IsEmpty(Skin.String(Widget.1113))">$INFO[Skin.String(Widget.1113)]</value>
        <value condition="Window.IsVisible(1114) + !String.IsEmpty(Skin.String(Widget.1114))">$INFO[Skin.String(Widget.1114)]</value>
        <value condition="Window.IsVisible(1115) + !String.IsEmpty(Skin.String(Widget.1115))">$INFO[Skin.String(Widget.1115)]</value>
        <value condition="Window.IsVisible(1116) + !String.IsEmpty(Skin.String(Widget.1116))">$INFO[Skin.String(Widget.1116)]</value>
        <value condition="Window.IsVisible(1117) + !String.IsEmpty(Skin.String(Widget.1117))">$INFO[Skin.String(Widget.1117)]</value>
        <value condition="Window.IsVisible(1118) + !String.IsEmpty(Skin.String(Widget.1118))">$INFO[Skin.String(Widget.1118)]</value>
        <value condition="Window.IsVisible(1119) + !String.IsEmpty(Skin.String(Widget.1119))">$INFO[Skin.String(Widget.1119)]</value>
        <value condition="Window.IsVisible(1112)">special://skin/extras/playlists/RandomEpisodes.xsp</value>
        <value>special://skin/extras/playlists/RandomMovies.xsp</value>
    </variable>

    <variable name="DefHubWidgetTarget">
        <value condition="Window.IsVisible(1111) + !String.IsEmpty(Skin.String(Widget.1111)) + !String.IsEmpty(Skin.String(Widget.1111.Type))">$INFO[Skin.String(Widget.1111.Type)]</value>
        <value condition="Window.IsVisible(1112) + !String.IsEmpty(Skin.String(Widget.1112)) + !String.IsEmpty(Skin.String(Widget.1112.Type))">$INFO[Skin.String(Widget.1112.Type)]</value>
        <value condition="Window.IsVisible(1113) + !String.IsEmpty(Skin.String(Widget.1113)) + !String.IsEmpty(Skin.String(Widget.1113.Type))">$INFO[Skin.String(Widget.1113.Type)]</value>
        <value condition="Window.IsVisible(1114) + !String.IsEmpty(Skin.String(Widget.1114)) + !String.IsEmpty(Skin.String(Widget.1114.Type))">$INFO[Skin.String(Widget.1114.Type)]</value>
        <value condition="Window.IsVisible(1115) + !String.IsEmpty(Skin.String(Widget.1115)) + !String.IsEmpty(Skin.String(Widget.1115.Type))">$INFO[Skin.String(Widget.1115.Type)]</value>
        <value condition="Window.IsVisible(1116) + !String.IsEmpty(Skin.String(Widget.1116)) + !String.IsEmpty(Skin.String(Widget.1116.Type))">$INFO[Skin.String(Widget.1116.Type)]</value>
        <value condition="Window.IsVisible(1117) + !String.IsEmpty(Skin.String(Widget.1117)) + !String.IsEmpty(Skin.String(Widget.1117.Type))">$INFO[Skin.String(Widget.1117.Type)]</value>
        <value condition="Window.IsVisible(1118) + !String.IsEmpty(Skin.String(Widget.1118)) + !String.IsEmpty(Skin.String(Widget.1118.Type))">$INFO[Skin.String(Widget.1118.Type)]</value>
        <value condition="Window.IsVisible(1119) + !String.IsEmpty(Skin.String(Widget.1119)) + !String.IsEmpty(Skin.String(Widget.1119.Type))">$INFO[Skin.String(Widget.1119.Type)]</value>
        <value>videos</value>
    </variable>

    <include name="Defs_Shortcuts_SetHub">
        <control type="button" id="$PARAM[buttonid2]" description="Set HUB WIDGET">
            <width>100%</width>
            <label>31273</label>
            <height>66</height>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtons</include>
            <label2>$INFO[Skin.String(Widget.$PARAM[hubid].Label)]</label2>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <onclick>RunScript(script.skinshortcuts,type=shortcuts&amp;grouping=widget&amp;skinList=Widget.$PARAM[hubid]&amp;skinLabel=Widget.$PARAM[hubid].Label&amp;skinType=Widget.$PARAM[hubid].Type)</onclick>
        </control>
        <control type="button" id="$PARAM[buttonid1]" description="Set HUB">
            <width>100%</width>
            <label>31178</label>
            <height>66</height>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtons</include>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <onclick>RunScript(script.skinshortcuts,type=manage&amp;group=x$PARAM[hubid])</onclick>
        </control>
    </include>

</includes>
